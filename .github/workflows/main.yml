name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check code formatting
        run: npm run format -- --check
      
      - name: Run linter
        run: npm run lint
      
      - name: Run unit tests
        run: npm test -- --coverage
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-android:
    name: Build Android App
    needs: validate
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install NativeScript CLI
        run: npm install -g nativescript
      
      - name: Build Android app
        run: |
          ns build android --release \
            --key-store-path ${{ secrets.ANDROID_KEYSTORE_PATH }} \
            --key-store-password ${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
            --key-store-alias ${{ secrets.ANDROID_KEYSTORE_ALIAS }} \
            --key-store-alias-password ${{ secrets.ANDROID_KEYSTORE_ALIAS_PASSWORD }}
      
      - name: Upload Android build
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: platforms/android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: Build iOS App
    needs: validate
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install NativeScript CLI
        run: npm install -g nativescript
      
      - name: Install iOS dependencies
        run: |
          ns prepare ios
          cd platforms/ios && pod install
      
      - name: Build iOS app
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
        run: |
          ns build ios --release \
            --team-id ${{ secrets.APPLE_TEAM_ID }} \
            --provision ${{ secrets.APPLE_PROVISION_PROFILE }}
      
      - name: Create IPA
        run: |
          cd platforms/ios/build/Release-iphoneos
          mkdir Payload
          cp -r BookVerse.app Payload
          zip -r BookVerse.ipa Payload
      
      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: ios-release
          path: platforms/ios/build/Release-iphoneos/BookVerse.ipa

  e2e-tests:
    name: Run E2E Tests
    needs: [build-android, build-ios]
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install NativeScript CLI
        run: npm install -g nativescript
      
      - name: Install Detox CLI
        run: npm install -g detox-cli
      
      - name: Build E2E iOS app
        run: detox build --configuration ios.sim.release
      
      - name: Run E2E tests on iOS
        run: detox test --configuration ios.sim.release --cleanup
      
      - name: Upload E2E test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-artifacts
          path: artifacts

  deploy:
    name: Deploy Apps
    needs: e2e-tests
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download Android build
        uses: actions/download-artifact@v3
        with:
          name: android-release
      
      - name: Download iOS build
        uses: actions/download-artifact@v3
        with:
          name: ios-release
      
      - name: Deploy to Google Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.bookverse.app
          releaseFiles: app-release.apk
          track: internal
      
      - name: Deploy to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APPSTORE_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        run: |
          xcrun altool --upload-app -f BookVerse.ipa \
            --apiKey "$APP_STORE_CONNECT_API_KEY_ID" \
            --apiIssuer "$APP_STORE_CONNECT_ISSUER_ID" \
            --type ios

  notify:
    name: Send Notifications
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Send email notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: BookVerse CI/CD Pipeline ${{ job.status }}
          body: |
            Pipeline status: ${{ job.status }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            See details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: BookVerse CI/CD
