name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install NativeScript CLI
      run: npm install -g nativescript

    - name: Check commit messages
      uses: wagoid/commitlint-github-action@v5

    - name: Lint code
      run: npm run lint

    - name: Format check
      run: npx prettier --check "src/**/*.{ts,scss,xml}"

    - name: Type check
      run: tsc --noEmit

    - name: Run unit tests
      run: npm run test

    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage/

  e2e-ios:
    name: E2E Tests (iOS)
    runs-on: macos-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install NativeScript CLI
      run: npm install -g nativescript

    - name: Install iOS platform
      run: tns platform add ios

    - name: Build iOS app
      run: npm run e2e:build

    - name: Run E2E tests (iOS)
      run: npm run e2e:ios

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: e2e-ios-artifacts
        path: artifacts/

  e2e-android:
    name: E2E Tests (Android)
    runs-on: macos-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install dependencies
      run: npm ci

    - name: Install NativeScript CLI
      run: npm install -g nativescript

    - name: Install Android platform
      run: tns platform add android

    - name: Build Android app
      run: npm run e2e:build

    - name: Run E2E tests (Android)
      run: npm run e2e:android

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: e2e-android-artifacts
        path: artifacts/

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build production bundle
      run: npm run build:prod

    - name: Analyze bundle size
      run: |
        npx bundlesize --files "dist/**/*.js" --max-size 500kb
      continue-on-error: true

  accessibility:
    name: Accessibility Check
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run accessibility tests
      run: npm run test:a11y

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check documentation coverage
      run: npm run docs:coverage

    - name: Validate documentation links
      run: npm run docs:validate

  notify:
    name: Notify on Completion
    runs-on: ubuntu-latest
    needs: [validate, e2e-ios, e2e-android, security]
    if: always()
    
    steps:
    - name: Check job status
      id: check
      run: |
        if [[ "${{ needs.validate.result }}" == "success" && \
              "${{ needs.e2e-ios.result }}" == "success" && \
              "${{ needs.e2e-android.result }}" == "success" && \
              "${{ needs.security.result }}" == "success" ]]; then
          echo "status=success" >> $GITHUB_OUTPUT
        else
          echo "status=failure" >> $GITHUB_OUTPUT
        fi

    - name: Create status check
      uses: actions/github-script@v6
      with:
        script: |
          const status = "${{ steps.check.outputs.status }}"
          const description = status === "success" 
            ? "All checks passed successfully" 
            : "Some checks failed"
          
          await github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'PR Validation',
            head_sha: context.sha,
            status: 'completed',
            conclusion: status,
            output: {
              title: status === "success" ? "PR Validation Passed" : "PR Validation Failed",
              summary: description
            }
          })
